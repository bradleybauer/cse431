#include<iostream>
long t[]={1,6,36,216,1296,7776,46656,279936,679616,77696,466176,797056,782336,694016,164096,984576,907456,444736,668416,10496,62976,377856,267136,602816,616896,701376,208256,249536,497216,983296,899776,398656,391936,351616,109696,658176,949056,694336,166016,996096,976576,859456,156736,940416,642496,854976,129856,779136,674816,48896,293376,0,0,624,387,4368,2709,26832,16641,161616,100233,970320,601785,822544,611097,935888,666969,615952,2201,696336,13593,178640,81945,72464,492057,435408,952729,613072,716761,679056,300953,74960,806105,450384,837017,702928,22489,218192,135321,309776,812313,859280,874265,156304,245977,938448,476249,631312,857881,788496,147673,731600,886425,390224,318937,341968,914009,52432,484441,315216,907033,891920,442585,352144,655897,113488,935769,681552,615001,89936,690393,540240,142745,242064,856857,453008,141529,718672,849561,312656,97753,876560,586905,259984,521817,560528,131289,363792,788121,183376,729113,100880,375065,605904,250777,636048,505049,816912,30681,902096,184473,413200,107225};
int main(){
  scanf("%s");
  for(int S,K,N=1e6;std::cin>>S>>K;){
    if(K>1)S=(S*t[K/2]-t[51+K/2*2+S%2]+N)%N;
    if(K%2)S=((S+S%2*84-99)*(3-S%2)+N)%N;
    printf("%d ",S);
  }
}
// the list t[:51] is a prefix of X=[(6**i)%1e6 for i in range(inf)]
// the digits of numbers in X cycle
// 1st digit cycle length = 1
// 2st digit cycle length = 5
// 3rd digit cycle length = 25
// 4th digit cycle length = 125
// 5th digit cycle length = 625
// 6th digit cycle length = 3125
// for the 6th digit, the cycle starts at i=6 since (6**6)%1e6==(6**3131)%1e6
// so there is a relatively small lut T s.t. we can compute (6**i)%1e6 for arbitrary i>=0
// if the same could be done for t[51:] then the algorithm could be extended beyond k==100
// using constant time and space
